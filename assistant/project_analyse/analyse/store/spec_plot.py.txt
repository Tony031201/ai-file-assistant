这些代码主要用于**数字信号处理中的频谱分析和窗函数效果演示**。让我逐部分分析：

## 代码功能分析：

### 1. 基础函数定义
- `sinusoid()`: 生成指定频率、采样数、采样率的正弦波信号
- `bin2freq()`: 将DFT频率bin索引转换为实际频率值

### 2. 信号生成
- 创建两个频率非常接近的正弦波信号（bin1=30, bin2=30.5）
- 生成汉宁窗（Hann window）用于信号处理

### 3. 频谱计算
计算四种不同情况下的幅度频谱：
- `mspec1`: 频率为bin1的原始信号频谱
- `mspec2`: 频率为bin2的原始信号频谱  
- `mspec3`: 频率为bin1的信号加窗后频谱
- `mspec4`: 频率为bin2的信号加窗后频谱

### 4. 可视化功能
`spec_plot()`函数提供灵活的频谱绘图功能：
- 支持多种X轴单位（频率bin、Hz、归一化频率）
- 支持线性和对数(dB)刻度显示
- 可选择是否显示茎叶图

### 5. 结果展示
生成两张对比图：
- 线性刻度的茎叶图（bin 20-40范围）
- 对数刻度的线图（bin 10-50范围）

## 总结
这段代码的核心目的是**演示窗函数在频谱分析中的作用**：

1. **频谱泄漏问题**：当信号频率不是整数bin时（如30.5），会产生频谱泄漏
2. **窗函数效果**：汉宁窗可以减少频谱泄漏，但会增加主瓣宽度
3. **可视化对比**：通过多种显示方式直观展示加窗前后的频谱差异

这是数字信号处理教学中的经典示例，帮助理解窗函数在FFT分析中的重要性。